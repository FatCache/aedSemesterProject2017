/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Market;

import Business.Network.Network;
import Business.Organization.MarketOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ProducePickUpRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abdusamed
 */
public class MarketBuyerWorkAreaJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount account;
    MarketOrganization organization;
    Network network;

    /**
     * Creates new form MarketBuyerWorkAreaJPanel
     */
    public MarketBuyerWorkAreaJPanel() {

    }

    public MarketBuyerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, MarketOrganization organization, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.network = network;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBidList = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtBidAmount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        jButton3.setText("Place bid");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Current Items On Bid:");

        tblBidList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Produce", "Last Bid By", "Current Bid Amount", "Status", "Final Bid By"
            }
        ));
        jScrollPane2.setViewportView(tblBidList);

        jLabel3.setText("Enter Amount to Bid");

        txtBidAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBidAmountActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Market Buyer Work View");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(112, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addGap(34, 34, 34)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(173, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBidAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBidAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBidAmountActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int seletectedRow = tblBidList.getSelectedRow();
        if(seletectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Bid To Continue", "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
            int bidAmount = Integer.parseInt(txtBidAmount.getText());
            ProducePickUpRequest productPickUpMarket = (ProducePickUpRequest) tblBidList.getValueAt(seletectedRow,0);
            if(bidAmount > productPickUpMarket.getCurrentBid()){
                System.out.println("Bid Validation Passed");
                productPickUpMarket.setCurrentBid(bidAmount);
                productPickUpMarket.setLastBidBy(account);
                JOptionPane.showMessageDialog(null, "Bid Placed of Amount $" + bidAmount, "Success", JOptionPane.OK_OPTION);

            }else{
                JOptionPane.showMessageDialog(null, "Increase Bid Amount!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
     
            
            
            
    }//GEN-LAST:event_jButton3ActionPerformed
    
    populateTable();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblBidList;
    private javax.swing.JTextField txtBidAmount;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        DefaultTableModel dtm = (DefaultTableModel) tblBidList.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
            
            ProducePickUpRequest productPickUpMarket = (ProducePickUpRequest) request;
            if(productPickUpMarket.isBidStatus()){
            
                Object[] row = new Object[5];
                row[0] = productPickUpMarket;
                row[1] = productPickUpMarket.getLastBidBy();
                row[2] = productPickUpMarket.getCurrentBid();
                row[3] = productPickUpMarket.getStatus() == null? null:productPickUpMarket.getStatus();
                row[4] = productPickUpMarket.getFinalBid() == 0? "Not Ended":productPickUpMarket.getFinalBid();

                dtm.addRow(row);
            }
        }
        
    }
}
