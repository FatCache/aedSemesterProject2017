/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.

    Produce update to information displayed here after bid is completed
    Purpose is to generate news for farmer which produce is in demand.

 */
package userinterface.Market;

import Business.Network.MarketNews;
import Business.Network.MarketNewsDirectory;
import Business.Network.Network;
import Business.Network.Product;
import Business.Network.ProductDirectory;
import Business.Organization.MarketOrganization;
import Business.Utility;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abdusamed
 */
public class MarketAssistantWorkAreaJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    Network network;
    MarketNewsDirectory marketNewsDirectory;
    ProductDirectory productDirectory;
    MarketOrganization organization;

    /**
     * Creates new form MarketAssistantWorkAreaJPanel
     */


    public MarketAssistantWorkAreaJPanel(JPanel userProcessContainer, MarketOrganization organization, Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        
        this.organization = organization;
        
        marketNewsDirectory = network.getMarketNewsDirectory();
        productDirectory = network.getProductDirectory();
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMessageField = new javax.swing.JTextField();
        submitJButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProducePrice = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        submitJButton1.setText("Publish Message");
        submitJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Push Notifcation");

        tblProducePrice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Produce", "Price", "Month"
            }
        ));
        jScrollPane2.setViewportView(tblProducePrice);

        jLabel4.setText("Completed Bid for Produce Detail for News:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Market Assistant Work View");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(submitJButton1))
                            .addComponent(txtMessageField)))
                    .addComponent(jLabel4))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessageField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitJButton1)
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButton1ActionPerformed

        int seletectedRow = tblProducePrice.getSelectedRow();
        
        if(seletectedRow < 0 || txtMessageField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please select a produce from the table to Publish News OR Invalid Entry", "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
            if(txtMessageField != null){
                MarketNews marketNews = new MarketNews();
                marketNews.setDateAnnounced(Utility.getCurrentDate());
                marketNews.setNewsDetail(txtMessageField.getText());
                marketNews.setDemandStatus("Sold in Market");
                marketNews.setNewsSubject("MarketAssistant");
                Product product = (Product) tblProducePrice.getValueAt(seletectedRow, 0);
                marketNews.setProduct(product);
                
                marketNewsDirectory.getMarketNewsDirectory().add(marketNews);
                System.out.println("Market News Object Added Successfully");
                
                JOptionPane.showMessageDialog(null, "News has been broadcasted!", "Success", JOptionPane.OK_OPTION);

                
            }
        }
    }//GEN-LAST:event_submitJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton submitJButton1;
    private javax.swing.JTable tblProducePrice;
    private javax.swing.JTextField txtMessageField;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblProducePrice.getModel();
        dtm.setRowCount(0);

        for (Product product : network.getProductDirectory().getProductList()){
            Object[] row = new Object[3];
            row[0] = product;
            row[1] = product.getRate();
            row[2] = product.getProductMonth().getValue();
            dtm.addRow(row);
            }
    }

}
